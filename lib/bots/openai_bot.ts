import { BotFunc, BotCtx, generateMoves } from '../doudizhu/engine';import { extractFirstJsonObject, nonEmptyReason } from './util';export const OpenAIBot=(o:{apiKey:string,model?:string,baseUrl?:string}):BotFunc=>async (ctx:BotCtx)=>{try{if(!o.apiKey)throw new Error('Missing OpenAI API Key');const r=await fetch((o.baseUrl||'https://api.openai.com').replace(/\/$/, '')+'/v1/chat/completions',{method:'POST',headers:{'content-type':'application/json',authorization:`Bearer ${o.apiKey}`},body:JSON.stringify({model:o.model||'gpt-4o-mini',response_format:{type:'json_object'},messages:[{role:'system',content:'Only reply with a strict JSON object for the move.'},{role:'user',content:`你是斗地主出牌助手。必须只输出一个 JSON 对象：\n{ "move": "play|pass", "cards": ["A","A"], "reason": "简要理由" }\n\n手牌：${ctx.hands.join('')}\n需跟：${ctx.require?JSON.stringify(ctx.require):'null'}\n可过：${ctx.canPass?'true':'false'}\n策略：${ctx.policy}\n只能出完全合法的牌型；若必须跟牌则给出能压住的最优解。`}]})});if(!r.ok)throw new Error('HTTP '+r.status+' '+(await r.text()).slice(0,200));const j:any=await r.json();const out=j?.choices?.[0]?.message?.content||'';const p:any=extractFirstJsonObject(out)||{};const m=p.move==='pass'?'pass':'play';const cds=Array.isArray(p.cards)?p.cards:[];const reason=nonEmptyReason(p.reason,'OpenAI');return m==='pass'?{move:'pass',reason}:{move:'play',cards:cds,reason};}catch(e:any){const reason=`OpenAI 调用失败：${e?.message||e}，已回退`;if(ctx.canPass)return{move:'pass',reason};const legal=generateMoves(ctx.hands,ctx.require,ctx.policy);return{move:'play',cards:(legal&&legal[0])||[ctx.hands[0]],reason};}}