import { BotFunc, BotCtx, generateMoves } from '../doudizhu/engine';export const HttpBot=(o:{url?:string,base?:string,apiKey?:string,token?:string,headers?:Record<string,string>}):BotFunc=>async (ctx:BotCtx)=>{try{const ep=(o.url||o.base||'').replace(/\/$/,'');if(!ep)throw new Error('Missing HTTP endpoint');const r=await fetch(ep,{method:'POST',headers:{'content-type':'application/json',...(o.apiKey||o.token?{authorization:`Bearer ${o.apiKey||o.token}`}:{}) ,...(o.headers||{})},body:JSON.stringify(ctx)});if(!r.ok)throw new Error('HTTP '+r.status+' '+(await r.text()).slice(0,200));const j:any=await r.json();const m=j.move==='pass'?'pass':'play';const cds=Array.isArray(j.cards)?j.cards:[];const reason=(j.reason??'').toString().trim()||'HTTP 端返回';return m==='pass'?{move:'pass',reason}:{move:'play',cards:cds,reason};}catch(e:any){const reason=`HTTP 端调用失败：${e?.message||e}，已回退`;if(ctx.canPass)return{move:'pass',reason};const legal=generateMoves(ctx.hands,ctx.require,ctx.policy);return{move:'play',cards:(legal&&legal[0])||[ctx.hands[0]],reason};}}